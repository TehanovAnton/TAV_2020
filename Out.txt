defF IntT strle(StrT s)
defF StrT strsu(StrT s,IntT b,IntT e)
defF BoolT strca(StrT s,StrT z)
defF StrT fstandlib(StrT s)
def IntT b=strle(s)-3
def StrT a=strsu(s,0,b)
def BoolT res=strca(s,a)
put 'res =>:'
put res
ret ' '
end
defF IntT conditionaloperator(IntT x,IntT y)
IF(x<0fhm)
put 'x less then 0fhm'
ELS
put 'x isnt less then 0fhm'
IF(y>=10o)
put 'y more or equal 10o'
end
end
ret 0
end
defF IntT arithmeticoperations(IntT x,StrT y)
def IntT res=(x*10-5)/strle(y)
ret res
end
defF StartPoint
def IntT firstres=conditionaloperator(20,10o)
def IntT secondres=arithmeticoperations(4,'anton')
def StrT i=fstandlib('antonTehanov')
RIF(secondres>=0)
secondres=secondres-1
put secondres
end
ret 0
end